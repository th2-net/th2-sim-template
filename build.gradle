buildscript {
    ext {
        kotlin_version = "1.3.72"
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlin_version}"
    }
}
plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'application'
    id 'com.palantir.docker' version '0.25.0'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}

ext {
    sharedDir           = file("${project.rootDir}/shared")
}

group 'com.exactpro.th2'
version release_version

repositories {
    maven {
        name 'MavenLocal'
        url sharedDir
    }
    mavenCentral()
    mavenLocal()

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    api platform('com.exactpro.th2:bom:3.0.0')

    implementation "com.exactpro.th2:sim:3.5.0"
    implementation "com.exactpro.th2:common:3.13.4"
    api "com.exactpro.th2:grpc-sim-template:3.1.0"
    //api "com.exactpro.th2:grpc-sim-${grpc_suffix}${grpc_version.isEmpty() ? "" : ":${grpc_version}"}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlin_version}"

    implementation "javax.annotation:javax.annotation-api:1.3.2"

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

sourceSets {
    main {
        java {
            srcDirs 'src/main/java', 'src/gen/main/java', 'src/gen/main/grpc'
        }
        kotlin {
            srcDirs 'src/main/kotlin'
        }
    }
}

application {
    mainClassName = "com.exactpro.th2.sim.run.SimulatorServerMain"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            name = 'localRepo'
            url = sharedDir
        }
    }
}

applicationName = 'service'

distTar {
    archiveName "${applicationName}.tar"
}

dockerPrepare {
    dependsOn distTar
}

docker {
    copySpec.from(tarTree("$buildDir/distributions/${applicationName}.tar"))
}

sourceCompatibility = 11
targetCompatibility = 11
